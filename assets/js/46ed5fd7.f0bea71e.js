"use strict";(self.webpackChunkdiscoveries_and_memories=self.webpackChunkdiscoveries_and_memories||[]).push([[5652],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>f});var n=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(i),m=a,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return i?n.createElement(f,r(r({ref:t},d),{},{components:i})):n.createElement(f,r({ref:t},d))}));function f(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=i.length,r=new Array(o);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,r[1]=s;for(var c=2;c<o;c++)r[c]=i[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},3790:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=i(7462),a=(i(7294),i(3905));const o={},r="Flutter Local Notifications",s={unversionedId:"library/services/flutter_local_notifications",id:"library/services/flutter_local_notifications",title:"Flutter Local Notifications",description:"Package//pub.dev/packages/flutterlocalnotifications",source:"@site/docs/library/services/04_flutter_local_notifications.mdx",sourceDirName:"library/services",slug:"/library/services/flutter_local_notifications",permalink:"/docs/library/services/flutter_local_notifications",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/library/services/04_flutter_local_notifications.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"API Client",permalink:"/docs/library/services/api_client"},next:{title:"Firebase Cloud Message",permalink:"/docs/library/services/firebase_cloud_message"}},l={},c=[{value:"Description Methods",id:"description-methods",level:2},{value:"Modelo de mensagem",id:"modelo-de-mensagem",level:2},{value:"Abstract Class",id:"abstract-class",level:2},{value:"Implementation Class",id:"implementation-class",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"flutter-local-notifications"},"Flutter Local Notifications"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Package: ",(0,a.kt)("a",{parentName:"p",href:"https://pub.dev/packages/flutter_local_notifications"},"https://pub.dev/packages/flutter_local_notifications"))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Implementation Date: JUL/23"),(0,a.kt)("p",{parentName:"admonition"},"Version: ^15.1.0+1")),(0,a.kt)("h2",{id:"description-methods"},"Description Methods"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"init: precisamos iniciar o servi\xe7o;"),(0,a.kt)("li",{parentName:"ul"},"showNotification: exibe uma mensagem enviada;"),(0,a.kt)("li",{parentName:"ul"},"checkForNotifications: verifica se existe alguma mensagem nova;")),(0,a.kt)("h2",{id:"modelo-de-mensagem"},"Modelo de mensagem"),(0,a.kt)("p",null,"Para este servi\xe7o necessitamos de uma classe modelo para mensagens com seus respectivos atributos;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass PushNotificationMessageModel {\n  final int id;\n  final String? title;\n  final String? body;\n  final String? payload;\n  EduPushNotificationMessage({\n    required this.id,\n    this.title,\n    this.body,\n    this.payload,\n  });\n}\n\n")),(0,a.kt)("h2",{id:"abstract-class"},"Abstract Class"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"\nabstract class NotificationService {\n  init();\n  Future<void> showNotification(\n      {required PushNotificationMessageModel message});\n  checkForNotifications();\n\n}\n\n")),(0,a.kt)("h2",{id:"implementation-class"},"Implementation Class"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass LocalPushNotificationService implements NotificationService{\n  final FlutterLocalNotificationsPlugin pushNotificationPlugin;\n\n  LocalPushNotificationService(this.pushNotificationPlugin);\n\n  Future<void> init() async {\n    AndroidInitializationSettings initializationSettingsAndroid =\n        const AndroidInitializationSettings('@mipmap/ic_launcher');\n\n    pushNotificationPlugin\n        .resolvePlatformSpecificImplementation<\n            AndroidFlutterLocalNotificationsPlugin>()\n        ?.requestPermission();\n\n    var initializationSettingsIOS = DarwinInitializationSettings(\n      requestAlertPermission: true,\n      requestBadgePermission: true,\n      requestSoundPermission: true,\n      onDidReceiveLocalNotification:\n          (int id, String? title, String? body, String? payload) async {\n        await _onSelectedNotification(payload: payload);\n      },\n    );\n\n    var initializationSettings = InitializationSettings(\n        android: initializationSettingsAndroid, iOS: initializationSettingsIOS);\n    await pushNotificationPlugin.initialize(initializationSettings,\n        onDidReceiveNotificationResponse:\n            (NotificationResponse notificationResponse) async {\n      await _onSelectedNotification(payload: notificationResponse.payload);\n    });\n  }\n\n  Future<void> showNotification(\n      {required EduPushNotificationMessage message}) async {\n    const androidMessageShowDetails = AndroidNotificationDetails(\n      'LembretesAndroid',\n      'LembretesAndroid',\n      channelDescription: 'Este \xe9 um canal para lembretes',\n      importance: Importance.max,\n      enableVibration: true,\n    );\n\n    const iOSMessageShowDetails = DarwinNotificationDetails(\n        presentBanner: true,\n        presentSound: true,\n        subtitle: 'Lembretes_iOS',\n        threadIdentifier: 'Lembretes_iOS');\n\n    pushNotificationPlugin.show(\n      message.id,\n      message.title,\n      message.body,\n      const NotificationDetails(\n        android: androidMessageShowDetails,\n        iOS: iOSMessageShowDetails,\n      ),\n      payload: message.payload,\n    );\n  }\n\n  checkForNotifications() async {\n    final details =\n        await pushNotificationPlugin.getNotificationAppLaunchDetails();\n    if (details != null && details.didNotificationLaunchApp) {\n      _onSelectedNotification(payload: details.notificationResponse?.payload);\n    }\n  }\n\n  _onSelectedNotification({String? payload}) async {\n    if (payload != null && payload.isNotEmpty) {\n      //Aqui se pode tomar alguma decis\xe3o para alguma p\xe1gina;\n      //Modular.to.pushNamed(payload);\n    }\n  }\n}\n\n")),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"Contribuitor: BrAcInhO")))}p.isMDXComponent=!0}}]);