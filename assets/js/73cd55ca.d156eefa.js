"use strict";(self.webpackChunkdiscoveries_and_memories=self.webpackChunkdiscoveries_and_memories||[]).push([[9275],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>f});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),c=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},m=function(e){var a=c(e.components);return r.createElement(l.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=c(t),u=n,f=p["".concat(l,".").concat(u)]||p[u]||d[u]||o;return t?r.createElement(f,s(s({ref:a},m),{},{components:t})):r.createElement(f,s({ref:a},m))}));function f(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[p]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9402:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(7462),n=(t(7294),t(3905));const o={},s="OCP - Open Closed Principle",i={unversionedId:"solid_in_a_real_world/ocp",id:"solid_in_a_real_world/ocp",title:"OCP - Open Closed Principle",description:'"... para que os sistemas de software sejam f\xe1ceis de mudar (...) o comportamento desses sistemas mude pela adi\xe7\xe3o de um novo c\xf3digo em vez da altera\xe7\xe3o do c\xf3digo existente".',source:"@site/docs/solid_in_a_real_world/03_ocp.mdx",sourceDirName:"solid_in_a_real_world",slug:"/solid_in_a_real_world/ocp",permalink:"/docs/solid_in_a_real_world/ocp",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/solid_in_a_real_world/03_ocp.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SRP - Single Principle Responsability",permalink:"/docs/solid_in_a_real_world/srp"},next:{title:"LSP - Liskov Substituition Principle",permalink:"/docs/solid_in_a_real_world/lsp"}},l={},c=[{value:"Abstract class",id:"abstract-class",level:3},{value:"Implementation class",id:"implementation-class",level:3}],m={toc:c},p="wrapper";function d(e){let{components:a,...t}=e;return(0,n.kt)(p,(0,r.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ocp---open-closed-principle"},"OCP - Open Closed Principle"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},'"... para que os sistemas de software sejam f\xe1ceis de mudar (...) o comportamento desses sistemas mude pela adi\xe7\xe3o de um novo c\xf3digo em vez da altera\xe7\xe3o do c\xf3digo existente".')),(0,n.kt)("h3",{id:"abstract-class"},"Abstract class"),(0,n.kt)("p",null,"Como fazemos para termos partes intercambi\xe1veis em um software? Utilizamos nossas classes abstratas que contem regras de alto n\xedvel e cuja preocupa\xe7\xe3o \xe9 apenas sobre regras de neg\xf3cio!"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"abstract class RemoteDatabase {\n  Future<List<Map<String, dynamic>>> getData();\n  Future<bool> sendData({required Map<String, dynamic> data});\n}\n")),(0,n.kt)("h3",{id:"implementation-class"},"Implementation class"),(0,n.kt)("p",null,"Ap\xf3s definirmos as nossas regras de neg\xf3cio em uma classe com esta finalidade, finalmente, poderemos trabalhar com os detalhes de nossa implementa\xe7\xe3o."),(0,n.kt)("p",null,"Aqui vem o pulo do gato: como n\xf3s temos as regras definidas em uma classe espec\xedfica para esta finalidade podemos implementar os detalhes de nossas implementa\xe7\xf5es seguindo nossas regras."),(0,n.kt)("p",null,"Aqui temos dois exemplos de duas implementa\xe7\xf5es diferentes que respondem a um mesmo contrato de regras de neg\xf3cio:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Primeira implementa\xe7\xe3o: ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"class MyFirstDatabase implements RemoteDataBase {\nFuture<List<Map<String, dynamic>>> getData(){\n    // my implementation;\n};\n  Future<bool> sendData({required Map<String, dynamic> data}){\n      // my implementation;\n  };\n}\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Segunda implementa\xe7\xe3o: ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"class MySecondDatabase implements RemoteDataBase {\nFuture<List<Map<String, dynamic>>> getData(){\n    // my implementation;\n};\n  Future<bool> sendData({required Map<String, dynamic> data}){\n      // my implementation;\n  };\n}\n")),(0,n.kt)("p",null,"Este conceito \xe9 relativamente simples, por\xe9m, ainda gera muita d\xfavida entre os programadores, especialmente, os programadores iniciantes."),(0,n.kt)("p",null,"Lembrem-se:"),(0,n.kt)("p",null,"Utilize este recurso para escalar seu software com a seguran\xe7a de poder expandir sem interferir no que est\xe1 funcionando!"))}d.isMDXComponent=!0}}]);