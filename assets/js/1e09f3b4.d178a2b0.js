"use strict";(self.webpackChunkdiscoveries_and_memories=self.webpackChunkdiscoveries_and_memories||[]).push([[4375],{3905:(e,r,n)=>{n.d(r,{Zo:()=>d,kt:()=>f});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),l=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},d=function(e){var r=l(e.components);return t.createElement(s.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?t.createElement(f,i(i({ref:r},d),{},{components:n})):t.createElement(f,i({ref:r},d))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9225:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=n(7462),a=(n(7294),n(3905));const o={},i="DIP - Dependency Inversion Principle",c={unversionedId:"solid_in_a_real_world/dip",id:"solid_in_a_real_world/dip",title:"DIP - Dependency Inversion Principle",description:'"O c\xf3digo que implementa uma pol\xedtica de alto n\xedvel n\xe3o deve depender do c\xf3digo que implementa detalhes de n\xedvel mais baixo".',source:"@site/docs/solid_in_a_real_world/06_dip.mdx",sourceDirName:"solid_in_a_real_world",slug:"/solid_in_a_real_world/dip",permalink:"/docs/solid_in_a_real_world/dip",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/solid_in_a_real_world/06_dip.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ISP - Interface Segregation Principle",permalink:"/docs/solid_in_a_real_world/isp"},next:{title:"intro",permalink:"/docs/hamradio/intro"}},s={},l=[],d={toc:l},p="wrapper";function u(e){let{components:r,...n}=e;return(0,a.kt)(p,(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dip---dependency-inversion-principle"},"DIP - Dependency Inversion Principle"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},'"O c\xf3digo que implementa uma pol\xedtica de alto n\xedvel n\xe3o deve depender do c\xf3digo que implementa detalhes de n\xedvel mais baixo".'),(0,a.kt)("p",{parentName:"admonition"},'"Em uma interface abstrata, toda a mudan\xe7a corresponde a uma mudan\xe7a em suas implementa\xe7\xf5es concretas. (...) bons designers e arquitetos de software trabalham duro para reduzir a volatilidade das interfaces".'),(0,a.kt)("p",{parentName:"admonition"},"O componente abstrato cont\xe9m todas as regras de neg\xf3cio de alto n\xedvel da aplica\xe7\xe3o. Por sua vez, o componente concreto cont\xe9m todos os detalhes da implementa\xe7\xe3o que essas regras de neg\xf3cio manipulam.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class GetOccurrences implements GetOccurrencesUsecase {\n  final OccurrenceRepository _getOccurrencesRepository;\n\n  GetOccurrences(this._getOccurrencesRepository);\n  @override\n  Future<OccurrencesResult> getOccurrences(\n      {required OccurrenceQueryParams params}) async {\n    return _getOccurrencesRepository.getOccurrences(\n      params: params,\n    );\n  }\n}\n")))}u.isMDXComponent=!0}}]);