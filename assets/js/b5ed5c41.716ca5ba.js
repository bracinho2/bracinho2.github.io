"use strict";(self.webpackChunkdiscoveries_and_memories=self.webpackChunkdiscoveries_and_memories||[]).push([[6458],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},832:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={},o="SRP - Single Principle Responsability",l={unversionedId:"solid_in_a_real_world/srp",id:"solid_in_a_real_world/srp",title:"SRP - Single Principle Responsability",description:"- Vale para Classes...",source:"@site/docs/solid_in_a_real_world/02_srp.mdx",sourceDirName:"solid_in_a_real_world",slug:"/solid_in_a_real_world/srp",permalink:"/docs/solid_in_a_real_world/srp",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/solid_in_a_real_world/02_srp.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SOLID in a Real World",permalink:"/docs/solid_in_a_real_world/intro"},next:{title:"OCP - Open Closed Principle",permalink:"/docs/solid_in_a_real_world/ocp"}},s={},d=[{value:"Exemplo de uma classe:",id:"exemplo-de-uma-classe",level:2},{value:"Quando uma entidade atende \xe0s regras de neg\xf3cio:",id:"quando-uma-entidade-atende-\xe0s-regras-de-neg\xf3cio",level:3},{value:"Quando um m\xe9todo atende apenas algu\xe9m espec\xedfico:",id:"quando-um-m\xe9todo-atende-apenas-algu\xe9m-espec\xedfico",level:3}],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"srp---single-principle-responsability"},"SRP - Single Principle Responsability"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Vale para Classes..."),(0,r.kt)("li",{parentName:"ul"},"Vale para M\xe9todos..."),(0,r.kt)("li",{parentName:"ul"},"Vale para onde quisermos!")),(0,r.kt)("p",{parentName:"admonition"},'"Uma classe, uma fun\xe7\xe3o, um m\xf3dulo ou um simples elemento em um c\xf3digo deve fazer apenas uma tarefa, e esta tarefa deve ser feita apenas em favor de um ator.'),(0,r.kt)("p",{parentName:"admonition"},'Entenda-se: A \xfanica raz\xe3o para algo mudar \xe9 pela manifesta\xe7\xe3o da vontade de seu ator/cliente. Do contr\xe1rio, tudo deve permanecer como est\xe1".')),(0,r.kt)("h2",{id:"exemplo-de-uma-classe"},"Exemplo de uma classe:"),(0,r.kt)("h3",{id:"quando-uma-entidade-atende-\xe0s-regras-de-neg\xf3cio"},"Quando uma entidade atende \xe0s regras de neg\xf3cio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"class ActivityEntity {\n  final int day;\n  final int month;\n  final int year;\n  final int dayOfWeek;\n  final int weekYear;\n  final List<ActivityItemEntity> items;\n  ActivityEntity({\n    required this.day,\n    required this.month,\n    required this.year,\n    required this.dayOfWeek,\n    required this.weekYear,\n    required this.items,\n  });\n}\n")),(0,r.kt)("h3",{id:"quando-um-m\xe9todo-atende-apenas-algu\xe9m-espec\xedfico"},"Quando um m\xe9todo atende apenas algu\xe9m espec\xedfico:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"}," Future<void> _getActivities({\n    required int month,\n  }) async {\n    final result = await _getActivitiesUsecase.call(\n        param: GetActivityParam(\n      studentId: studentId,\n      month: month,\n    ));\n    result.fold(\n      (l) => null,\n      (success) {\n        _activities = success;\n      },\n    );\n  }\n")))}p.isMDXComponent=!0}}]);