"use strict";(self.webpackChunkdiscoveries_and_memories=self.webpackChunkdiscoveries_and_memories||[]).push([[885],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>g});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function d(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),s=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=s(n.components);return r.createElement(l.Provider,{value:e},n.children)},c="mdxType",p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,l=n.parentName,u=d(n,["components","mdxType","originalType","parentName"]),c=s(t),m=o,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||a;return t?r.createElement(g,i(i({ref:e},u),{},{components:t})):r.createElement(g,i({ref:e},u))}));function g(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=m;var d={};for(var l in e)hasOwnProperty.call(e,l)&&(d[l]=e[l]);d.originalType=n,d[c]="string"==typeof n?n:o,i[1]=d;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8284:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={},i="Custom DropdownButton",d={unversionedId:"library/widgets/custom_dropdown_button",id:"library/widgets/custom_dropdown_button",title:"Custom DropdownButton",description:"Pode ser utilizado com ENUM ou com Entidades;",source:"@site/docs/library/widgets/01_custom_dropdown_button.mdx",sourceDirName:"library/widgets",slug:"/library/widgets/custom_dropdown_button",permalink:"/docs/library/widgets/custom_dropdown_button",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/library/widgets/01_custom_dropdown_button.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"API Client",permalink:"/docs/library/services/api_client"},next:{title:"SOLID in a Real World",permalink:"/docs/solid_in_a_real_world/intro"}},l={},s=[],u={toc:s},c="wrapper";function p(n){let{components:e,...t}=n;return(0,o.kt)(c,(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"custom-dropdownbutton"},"Custom DropdownButton"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Pode ser utilizado com ENUM ou com Entidades;"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"- Utiliza generics;\n- A lista de items dever\xe1 ser passada de fora para dentro;\n"))),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Customiza\xe7\xe3o do Bot\xe3o. Aten\xe7\xe3o para o Generics!")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class CustomDropDownWidget<T> extends StatelessWidget {\n  final String label;\n  final T? value;\n  final Function(T?) onChanged;\n  final String? Function(T?)? validator;\n  final List<DropdownMenuItem<T>> items;\n\n  const CustomDropDownWidget({\n    Key? key,\n    this.value,\n    required this.onChanged,\n    required this.label,\n    required this.items,\n    this.validator,\n  }) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return DropdownButtonFormField<T>(\n      icon: Padding(\n        padding: const EdgeInsets.only(\n          right: 20,\n        ),\n        child: Icon(\n          Icons.arrow_downward_rounded,\n          color: Theme.of(context).primaryColor,\n        ),\n      ),\n      validator: validator,\n      decoration: const InputDecoration(\n          prefixIcon: SizedBox(\n            height: 64,\n            width: 64,\n            child: Icon(\n              Icons.pin_drop_outlined,\n            ),\n          ),\n          border: OutlineInputBorder(\n            borderRadius: BorderRadius.all(\n              Radius.circular(5),\n            ),\n          ),\n          filled: false,\n          label: Text('Select your Country'),\n          contentPadding: EdgeInsets.all(0)),\n      isExpanded: true,\n      items: items,\n      value: value,\n      onChanged: onChanged,\n    );\n  }\n}\n\n")),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Chamada do Bot\xe3o;")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'class CustomDropDown extends StatelessWidget {\n  CustomDropDown({super.key});\n\n  final _phoneController = TextEditingController();\n  Country? selectedCountry;\n\n  final List<Country> countries = [\n    Country(\n      name: "Brazil",\n      flag: "\ud83c\udde7\ud83c\uddf7",\n      code: "BR",\n      dialCode: "55",\n      minLength: 11,\n      maxLength: 11,\n    ),\n  ];\n\n  @override\n  Widget build(BuildContext context) {\n    return CustomDropDownWidget<Country>(\n      validator: Validators.validateDropDown,\n      items: countries.map((Country value) {\n        return DropdownMenuItem<Country>(\n          value: value,\n          child: Row(\n            children: [\n              CircleAvatar(\n                backgroundColor: Colors.transparent,\n                child: Text(value.flag),\n              ),\n              const SizedBox(\n                width: 10,\n              ),\n              Text(\n                value.name,\n                overflow: TextOverflow.clip,\n              ),\n            ],\n          ),\n        );\n      }).toList(),\n      onChanged: (country) {\n        selectedCountry = country;\n        _phoneController.text = country!.dialCode;\n      },\n      label: \'Country\',\n    );\n  }\n}\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Existe a possibilidade de utilizar um validador para seu Dropdown;\nEle valida se um item foi escolhido na listagem;")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class Validators {\n  static String? validateDropDown(Country? value) =>\n      value == null ? 'Select your Country' : null;\n}\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Aqui demonstro um exemplo da entidade;"),(0,o.kt)("p",{parentName:"admonition"},"Lembre-se de duas coisas importantes:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"- Converta seus dados de sua fonte de dados para sua entidade;\n- Customize a entidade a seu gosto;\n"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class Country {\n  final String name;\n  final String flag;\n  final String code;\n  final String dialCode;\n  final String regionCode;\n  final int minLength;\n  final int maxLength;\n  Country({\n    required this.name,\n    required this.flag,\n    required this.code,\n    required this.dialCode,\n    this.regionCode = '',\n    required this.minLength,\n    required this.maxLength,\n  });\n\n  String get fullCountryCode {\n    return dialCode + regionCode;\n  }\n\n  String get displayCC {\n    if (regionCode != \"\") {\n      return '$dialCode $this.regionCode';\n    }\n    return dialCode;\n  }\n\n  @override\n  String toString() {\n    return 'Country: $name $flag $code';\n  }\n}\n\n")))}p.isMDXComponent=!0}}]);